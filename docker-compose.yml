version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: optimeal-postgres
    environment:
      POSTGRES_DB: optimeal_dev
      POSTGRES_USER: optimeal_user
      POSTGRES_PASSWORD: dev_password_change_in_production
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U optimeal_user -d optimeal_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - optimeal-network

  # Backend API (FastAPI)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: optimeal-api
    environment:
      DATABASE_URL: postgresql://optimeal_user:dev_password_change_in_production@postgres:5432/optimeal_dev
      SECRET_KEY: dev-secret-key-change-in-production-use-openssl-rand-hex-32
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 10080
      GEMINI_API_KEY: ${GEMINI_API_KEY:-your-gemini-api-key-here}
      ENVIRONMENT: development
      MEAL_PLAN_USER_LIMIT_PER_WEEK: 2
      GEMINI_REQUESTS_PER_MINUTE: 15
      GEMINI_DAILY_LIMIT: 1500
      GEMINI_DAILY_ALERT_THRESHOLD: 1200
      OCR_CONFIDENCE_THRESHOLD: 0.6
      PADDLEOCR_LANG: en
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - /app/.venv  # Prevent mounting venv
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - optimeal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: optimeal-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:8000/api/v1
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Prevent mounting node_modules
    depends_on:
      - api
    command: npm run dev -- --host 0.0.0.0
    networks:
      - optimeal-network

volumes:
  postgres_data:
    driver: local

networks:
  optimeal-network:
    driver: bridge
